fs         = require 'fs-extra'
which      = require 'which'
path       = require 'path'
coffeebar  = require 'coffeebar'
{spawn, exec} = require 'child_process'

bin_path    = 'temp'
coffee_path = path.join 'src','coffee'
stylus_path = path.join 'src','stylus'

jade_path = {}
jade_options = {}

jade_path.main = path.join 'src','jade','main.jade'
jade_options.main =
  rootDir : './'
  includes : [
    'config/global'

    'utils/js_utils'
    'utils/geom_utils'
    'utils/osc_parser'
    'utils/artnet_client'

    'physical/light'

    'skeleton/skeleton'
    'skeleton/skeleton_sync'

    'helpers/helpers'
    'helpers/flying'
    'helpers/physics'

    'm11s/base/settings'
    'm11s/base/joint'
    'm11s/base/part'
    'm11s/base/morph'
    'm11s/base/bodyitems'
    'm11s/base/perso'

    'm11s/tiroirs/settings'
    'm11s/tiroirs/items/drawer_item'
    'm11s/tiroirs/items/flying'
    'm11s/tiroirs/items/drawer'
    'm11s/tiroirs/items/hat'
    'm11s/tiroirs/items/scarf'
    'm11s/tiroirs/items/buttons'
    'm11s/tiroirs/bodyitems'

    'm11s/bulbs/settings'
    'm11s/bulbs/items/bulb'
    'm11s/bulbs/items/rope'
    'm11s/bulbs/bodyitems'

    'm11s/thorns/settings'
    'm11s/thorns/bodyitems'
    'm11s/thorns/part'

    'm11s/tribal/settings'
    'm11s/tribal/perso'
    'm11s/tribal/bodyitems'
    'm11s/tribal/items/dreamcatcher'
    'm11s/tribal/items/pattern'
    'm11s/tribal/items/feather'
    'm11s/tribal/items/mask'
    'm11s/tribal/items/shadow'
    'm11s/tribal/items/stars'
    'm11s/tribal/items/fire'

    'm11s/stripes/settings'
    'm11s/stripes/items/umbrella'
    'm11s/stripes/items/falling'
    'm11s/stripes/items/stripes'
    'm11s/stripes/bodyitems'
    'm11s/stripes/perso'

    'm11s/birds/settings'
    'm11s/birds/items/branches'
    'm11s/birds/items/bird'
    'm11s/birds/items/house'
    'm11s/birds/items/lucioles'
    'm11s/birds/items/wildbird'
    'm11s/birds/bodyitems'

    'm11s/lockers/settings'
    'm11s/lockers/items/lock'
    'm11s/lockers/items/pile'
    'm11s/lockers/items/key'
    'm11s/lockers/bodyitems'

    'm11s/books/settings'
    'm11s/books/items/book'
    'm11s/books/items/wave'
    'm11s/books/bodyitems'

    'm11s/tech/settings'
    'm11s/tech/items/lines'
    'm11s/tech/items/links'
    'm11s/tech/items/sculpt'
    'm11s/tech/bodyitems'

    'playback/playback'
    'playback/record'

    'sound/music'
    'sound/sounds'

    'core/assets'
    'core/scene'

    'main'
  ]

jade_path.app   = path.join 'src','jade','app.jade'
jade_options.app = 
  rootDir : './'
  includes : [
    'app/quadwarp'
    'app/cloudstorage'
    'app/analytics'
    'app/viewport'
    'app'
  ]

watch = (cmd_name, options) ->
  cmd = which.sync cmd_name  
  prcss = spawn cmd, options
  prcss.stdout.pipe process.stdout
  prcss.stderr.pipe process.stderr
  console.log 'Watching ' + cmd_name + ' files'

simple_server = ->
  server = spawn 'coffee', ['simple_server.coffee', '3000', bin_path]
  server.stdout.pipe process.stdout
  server.stderr.pipe process.stderr

increment_version = (server_path) ->
  fs.readFile server_path+'/app.yaml', 'utf8', (err,data) ->
    throw err if err
    lines = data.split('\n')
    v = lines[1].split(': ')[1].split('-')
    m = parseInt(v[1]) + 1
    for val in [10,100]
      m = '0' + m if m < val 
    lines[1] = 'version: ' + v[0] + '-' + m
    fs.writeFile server_path+'/app.yaml', lines.join('\n'), 'utf8', (err) ->
      throw err if err


task 'dev', 'start dev env', ->

  fs.removeSync bin_path
  fs.mkdirSync  bin_path

  fs.copySync 'vendor', bin_path+'/vendor'
  fs.copySync 'assets', bin_path+'/assets'
  if fs.existsSync 'res/replays'
    fs.copySync 'res/replays', bin_path+'/replays'

  js_path = path.join bin_path,'js'
  css_path = path.join bin_path,'css'
  fs.ensureDir css_path
  watch 'coffee', ['-w', '-c', '-b', '-o', js_path, coffee_path]
  watch 'stylus', ['-w', stylus_path, '-o', css_path]
  for config in ['app', 'main']
    jade_options[config].includes.unshift 'config/config_debug'
    watch 'jade',   ['-w', jade_path[config], '-P', '-o', bin_path, '-O', JSON.stringify jade_options[config]]
  simple_server()

task 'build', 'Build optimized version of the app for the web', ->
  
  config = 'app'

  outputDir = 'bin'
  fs.removeSync outputDir
  fs.mkdirSync  outputDir

  fs.ensureDir outputDir+'/css'
  exec 'stylus -c -o '+outputDir+'/css ' + 'src/stylus/main.styl', (err, stdout, stderr) ->
    if err then console.log 'exec error: ' + err
    else console.log('stdout: ' + stdout)

  for config in ['app', 'main']

    opt = {build : config}
    exec 'jade -P -o '+outputDir+' -O {"build":\'"'+opt.build+'"\'} src/jade/'+opt.build+'.jade', (err, stdout, stderr) ->
      if err then console.log 'exec error: ' + err
      else console.log('stdout: ' + stdout)

    jade_options[config].includes.unshift 'config/config_release'
    for i in [0...jade_options[config].includes.length]
      jade_options[config].includes[i] = 'src/coffee/' + jade_options[config].includes[i] + '.coffee'

    coffeebar jade_options[config].includes,
      output : path.join outputDir, 'js', opt.build+'.min.js'
      minify : true
      bare : true
      silent : false

  fs.copySync 'vendor', outputDir+'/vendor'
  fs.copySync 'assets', outputDir+'/assets'

  fs.removeSync outputDir+'/assets/sounds'
  invoke 'mp3'

  fs.renameSync outputDir+'/app.html', outputDir+'/index.html'

task 'publish', 'Publish bin directory to app engine instance', ->

  serverPath = '../server'
  # increment_version serverPath
  fs.removeSync serverPath + '/public'
  fs.copySync 'bin', serverPath + '/public'
  prcss = spawn 'appcfg.py', ['--email=diagne.cyril@gmail.com', '--oauth2', 'update', serverPath+'/']
  prcss.stdout.pipe process.stdout
  prcss.stderr.pipe process.stderr

task 'mp3', 'Publish sounds', ->
  prcss = spawn 'coffee', ['export_sounds.coffee', 'publish'],
    cwd : './res'
  prcss.stdout.pipe process.stdout
  prcss.stderr.pipe process.stderr

